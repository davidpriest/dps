# Query TargetProcess
set_targetprocess

# change spaces to %20
Q=$*
# change spaces to %20
tpQ=<[ string-join(for $s in tokenize($Q,"&amp;amp;") return iri-to-uri($s),"&amp;") ]>
[ $(echo <[ starts-with($tpQ,$tpURI) ]>) = true ] && tpDEST="$tpQ" || tpDEST="$tpURI$tpQ"

try {
  curl --silent --max-time 15 --globoff --ntlm --user "$tpUSER":"$tpPASS" -H "Accept-Charset: utf-8" --url "${tpDEST}" >{RESP}
} 
catch X {
  echo "XMLSH SCRIPT ERROR" 1>&2
  echo "TargetProcess failed to respond" 1>&2
  return 1
}

[ -z "$RESP" ] && {
  echo "XMLSH SCRIPT ERROR" 1>&2
  echo "TargetProcess failed to respond" 1>&2
  throw "curl --url $tpDEST"
}

check=<[ contains($RESP,'&lt;head&gt;&#xD;') ]>
[ "$check" = "true" ] && { 
  echo $RESP 1>&2 ; return 1 
}

response=$<(xquote <[ $RESP ]> )

check=<[ local-name($response/*) ]>
[ "$check" = "Error" ] && {
  xecho $response 1>&2 ; return 1 
  return 1
}

more=<[ $response/Items/@Next/string() ]>
[ -n "$more" ] && {
  next_resp=$<(tp_query "$more" )
  for item in <[ $next_resp/Items/* ]> ; do
    response=$<(xed -xpath "/Items" -a $item <{response})
  done
}

[ -n "$ERR" ] && throw $ERR

xecho $response
return 0

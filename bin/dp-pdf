# Publish PDF
function usage {
  echo "Publish XML:FO Document"
  echo "dp-pdf $DUSETOPTS"
}

try {
  du_setopt_dp $@
  du_setpub

  if [ "$DEST" != "pipe" ] ; then
    # make a single, profiled XML:FO document
    IN=$(dp-fo $P1 $P2 $P3 --tmp $P $PF)
    [ ! -f "$IN" ] && throw "dp-pdf: FO transformation failed."
  else
    # use existing XML:FO document
    [ -f "$P" ] && IN=$P || throw "dp-pdf: No such compiled document $P"  
  fi

  # dp-fo transformation puts destination filename into @role
  FOUT=$(xpath -cf $IN "string(/*/@role/string())")
  [ $? ] && FOUT=$(xpath -cf $P "string(/*/@xml:id/string())")

  # transform XML:FO to PDF
  CP="$OPTDIR/XEP/lib/crimson.jar:$OPTDIR/XEP/lib/saxon.jar:$OPTDIR/XEP/lib/xep.jar:$OPTDIR/XEP/lib/xt.jar"
  [ $OS ] && {
    CP="$OPTDIR/XEP/lib/crimson.jar;$OPTDIR/XEP/lib/saxon.jar;$OPTDIR/XEP/lib/xep.jar;$OPTDIR/XEP/lib/xt.jar"
  } || {
    CP="$OPTDIR/XEP/lib/crimson.jar:$OPTDIR/XEP/lib/saxon.jar:$OPTDIR/XEP/lib/xep.jar:$OPTDIR/XEP/lib/xt.jar"
  }
  OUT=$T"_31.pdf"
  echo "XEP: eval \"java -Xms128m -Xmx512m -cp {$CP} -Dcom.renderx.xep.CONFIG=$USRETC/xep.config.xml com.renderx.xep.XSLDriver -quiet -xml $IN -pdf $OUT\" >>$DERROR 2>>$DERROR" >>$DERROR
  eval "java -Xms128m -Xmx512m -cp {$CP} -Dcom.renderx.xep.CONFIG=$USRETC/xep.config.xml com.renderx.xep.XSLDriver -quiet -xml $IN -pdf $OUT" >>$DERROR 2>>$DERROR
  [ $? ] && throw "dp-pdf: PDF rendering failed."
  [ -n "$ERR" ] && throw $ERR
}
catch X {
  echo ""
  echo "##DPS>>"
  echo $X
  echo "<<DPS##"
  echo ""
  [ -n "$ERR" ] && return 1 || exit
} finally {
  if [ "$DEST" = "tmp" -o "$DEST" = "pipe" ] ; then
    echo "$OUT"
    return 0
  elif [ "$DEBUG" = "false" ] ; then
    [ "$DEST" = "rel" ] && D=$USRREL || {
      D=$USRREV
      unset REV
      if [ -e $USRDIR/etc/config.properties ] ; then
        REPO=$(xproperties -in $USRDIR/etc/config.properties -v repo.type)
        case "$REPO" in
          hg|mercurial)
            REV=$(eval hg --cwd $UPUB id --id)
            ;;
          svn)
            REV=$(eval svn info --xml $UPUB | xpath "//commit/@revision/string()")
            ;;
          git)
            REV=$(eval git log -1 --pretty=format:%h -- $UPUB)
            ;;
          *)
            REV=""
            ERR="dp-pdf: repotype not set in $USRDIR/etc/config.properties; "
            ;;
        esac
        REV=$(xpath -n "substring(\"$REV\",1,12)") #12digit rev
        FOUT=$FOUT"-"$REV
      fi
    }
    p:cp -r -f "$OUT" "$D/$FOUT.pdf"
    echo "$D/$FOUT.pdf"
    clean
    return 0
  else
    echo "$OUT"
    echo "" 2>>$DERROR
    echo "##DPS>>" 2>>$DERROR
    echo "DEBUG MODE: $OUT" 2>>$DERROR
    echo "<<DPS##" 2>>$DERROR
    echo "" 2>>$DERROR
    return 0
  fi
}
